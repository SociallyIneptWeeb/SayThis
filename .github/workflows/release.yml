on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: pip install -r requirements.txt pyinstaller

    - name: Build executable
      run: pyinstaller --add-data "src/data:data" src/main.py --noconsole --name=SayThis-${{ runner.os }}

    - name: Zip dist folder (Windows)
      if: runner.os == 'Windows'
      run: |
        Compress-Archive -Path dist/* -DestinationPath saythis-${{ runner.os }}.zip
      shell: powershell

    - name: Zip dist folder (Unix)
      if: runner.os != 'Windows'
      run: |
        zip -r saythis-${{ runner.os }}.zip dist/

    - name: Upload ZIP as artifact
      uses: actions/upload-artifact@v4
      with:
        name: saythis-${{ runner.os }}
        path: saythis-${{ runner.os }}.zip

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Set up GitHub CLI
      run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

    - name: Determine next release version
      id: version
      run: |
        count=$(gh release list --limit 1000 --json tagName --jq 'length')
        version="v1.$count"
        echo "version=$version" >> "$GITHUB_OUTPUT"

    - name: Show version
      run: echo "Next release will be ${{ steps.version.outputs.version }}"

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Release ${{ steps.version.outputs.version }}
        files: ./artifacts/**/saythis-*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
